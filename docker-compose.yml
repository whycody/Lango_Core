services:
  mongo:
    image: mongo:7
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    ports:
      - "27018:27017"
    command: mongod --bind_ip_all --quiet --logpath /dev/null
    volumes:
      - mongo-data:/data/db
    networks:
      - lango-net
    restart: unless-stopped

  node-api:
    build: ./Lango_NodeAPI
    container_name: node-api
    volumes:
      - ./Lango_NodeAPI/src:/app/src:cached
      - ./Lango_NodeAPI/package.json:/app/package.json:cached
      - ./Lango_NodeAPI/jest.config.js:/app/jest.config.js:cached
      - ./Lango_NodeAPI/jest.setup.js:/app/jest.setup.js:cached
      - ./Lango_NodeAPI/package-lock.json:/app/package-lock.json:cached
      - ./Lango_NodeAPI/tsconfig.json:/app/tsconfig.json:cached
    ports:
      - "3000:3000"
    env_file:
      - ./Lango_NodeAPI/.env
      - .env
    depends_on:
      - mongo
    networks:
      - lango-net
    restart: unless-stopped

  fastapi:
    build: ./Lango_FastAPI
    container_name: fastapi
    volumes:
      - ./Lango_FastAPI:/app:cached
    ports:
      - "8000:8000"
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload --reload-dir /app/src
    env_file:
      - .env
    networks:
      - lango-net
    depends_on:
      - mongo
    restart: unless-stopped

volumes:
  mongo-data:

networks:
  lango-net:
    driver: bridge